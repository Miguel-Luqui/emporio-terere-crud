name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore EmporioTerere.Api/EmporioTerere.Api/EmporioTerere.Api.csproj

      - name: Build do projeto
        run: dotnet build EmporioTerere.Api/EmporioTerere.Api/EmporioTerere.Api.csproj --configuration Release

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Rodar testes unitários
        run: dotnet test EmporioTerere.Api/EmporioTerere.Tests/EmporioTerere.Tests.csproj --configuration Release --verbosity normal

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Publicar aplicação (simulação de deploy)
        run: dotnet publish EmporioTerere.Api/EmporioTerere.Api/EmporioTerere.Api.csproj -c Release -o ./publish

  docker:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Build da Docker image da API
        run: docker build -t emporioterere:latest .
